{"version":3,"sources":["elems/CapturePhoto.js","elems/CheckPhoto.js","elems/Checkbox.js","utils/ImageDataMirrorer.js","utils/ImageMirrorer.js","utils/FaceDetector.js","utils/utils.js","utils/ImageCuter.js","App.js","index.js"],"names":["getTransformProperty","isMirror","scaleFactor","x","y","transformValue","MozTransform","WebkitTransform","OTransform","transform","CapturePhoto","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fileInput","React","createRef","onChoosePhoto","bind","assertThisInitialized","click","videoCnstrts","videoConstraints","box","faceBox","rectWidth","viewport","height","rectHeight","videoMidX","width","videoMidY","minScale","Math","max","requiredScale","scale","relX","relY","leftVal","topVal","dx","dy","minTop","maxTop","minLeft","maxLeft","left","min","top","console","log","_this2","_this$calculateScaleL","calculateScaleLeftTop","drawBox","react_default","a","createElement","className","style","position","react_webcam_default","objectSpread","mirror","audio","imageSmoothing","ref","setRef","screenshotFormat","screenshotQuality","onUserMedia","type","onChange","handlePhotoChoose","input","onClick","onCapture","onNext","Component","CheckPhoto","src","imageSrc","onBack","onConfirm","Checkbox","label","checked","value","defaultProps","ImageDataMirrorer","imageData","arrayRGBA","pixelArray","forEach","pixel","push","r","g","b","pixelArrayToArrayOfRGBA","array2D","flatArray","i","length","apply","toConsumableArray","toFlatArray","reverse","mirror2DArrayByX","Array","slice","to2Darray","toPixelArray","data","ImageData","Uint8ClampedArray","utils_ImageMirrorer","ImageMirrorer","set","Set","canvas","document","ctx","getContext","img","Image","finishMirroring","webcam","passImageFunc","add","onload","getScreenshot","drawImage","currentImageData","getImageData","mirroredImageData","mirrorImage","putImageData","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","next","done","f","toDataURL","clear","utils_FaceDetector","FaceDetector","faceDetection","detectFace","getFullFaceDescription","MODEL_URL","faceapi","setFaceBox","callback","captureAndMirrorImage","then","fullDesc","detection","mtcnnParams","minFaceSize","res","selectedWidth","selectedHeight","mid","ResolutionsToCheck","right","findMaxResolution","_findMaxResolution","arguments","_callee","temporaryConstraints","regenerator_default","wrap","_context","prev","abrupt","floor","video","mandatory","minWidth","minHeight","maxWidth","maxHeight","navigator","mediaDevices","getUserMedia","stream","_didIteratorError","_iteratorError","undefined","getTracks","stop","err","return","catch","error","utils_ImageCuter","ImageCuter","cutPart","subImage","App","viewportWidth","documentElement","clientWidth","window","innerWidth","viewportHeight","clientHeight","innerHeight","state","handling","frameRate","facingMode","handleResize","setImage","setVideoConstraintsResolution","onMirrorChange","handlingCurrentFrame","addEventListener","loadModels","setState","screen","getPartOfAnImage","axios","post","setTimeout","e","target","isFarFromCurrent","resolution","abs","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","checkPhoto","CheckPhoto_CheckPhoto","capturePhoto","CapturePhoto_CapturePhoto","assign","setLeftInfo","setTopInfo","display","Checkbox_Checkbox","ReactDOM","render","App_App","getElementById"],"mappings":"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","file":"static/js/main.ba2945e8.chunk.js","sourcesContent":["import React from 'react';\nimport Webcam from 'react-webcam';\n\nfunction getTransformProperty(isMirror, scaleFactor, x, y){\n    const scaleValue = 'scale(' + (isMirror ? '-' : '') + scaleFactor + ', ' + scaleFactor + ')';\n    const translateValue = 'translate(' + x + 'px, ' + y + 'px)';\n    return getTransformStyleObject(scaleValue);// + ' ' + translateValue);\n}\n\n\nfunction getTransformStyleObject(transformValue) {\n    return {\n        MozTransform: transformValue,\n        WebkitTransform: transformValue,\n        OTransform: transformValue,\n        transform: transformValue,\n    };\n}\n\nexport default class CapturePhoto extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n        this.onChoosePhoto = this.onChoosePhoto.bind(this);\n    }\n\n    onChoosePhoto() {\n        this.fileInput.click();\n    }\n\n    calculateScaleLeftTop() {\n        const videoCnstrts = this.props.videoConstraints;\n        const box = this.props.faceBox;\n        const rectWidth = this.props.viewport.height * 0.45;\n        const rectHeight = this.props.viewport.height * 0.8;\n\n        const videoMidX = videoCnstrts.width / 2;\n        const videoMidY = videoCnstrts.height / 2;\n\n        const minScale = Math.max(rectWidth / videoCnstrts.width, rectHeight / videoCnstrts.height);\n        const requiredScale = rectWidth / box.width;\n        const scale = Math.max(minScale, requiredScale);\n\n        const relX = box.x - videoMidX;\n        const relY = box.y - videoMidY;\n\n        const leftVal = -videoCnstrts.width / 2 - relX * scale;\n        const topVal = -videoCnstrts.height / 2 - relY * scale + rectHeight / 6;\n\n        const dx = videoCnstrts.width / 2 * (scale - 1);\n        const dy = videoCnstrts.height / 2 * (scale - 1);\n\n\n        const minTop = -(videoCnstrts.height + dy - rectHeight);\n        const maxTop = dy;\n        const minLeft = -(videoCnstrts.width + dx - rectWidth);\n        const maxLeft = dx;\n\n        const left = Math.min(Math.max(leftVal, minLeft), maxLeft);\n        const top = Math.min(Math.max(topVal, minTop), maxTop);\n\n        console.log(scale + \" \" + left + \" \" + top);\n\n        return {scale, left, top};\n    }\n\n    render() {\n\n        const videoCnstrts = this.props.videoConstraints;\n        const box = this.props.faceBox;\n        const rectWidth = this.props.viewport.height * 0.45;\n        const rectHeight = this.props.viewport.height * 0.8;\n\n        const {scale, left, top} = this.calculateScaleLeftTop();\n\n        const drawBox = (\n            <div\n                className=\"face-box\"\n                style={{\n                    position: 'absolute',\n                    height: Math.min(box.height * scale - 6, rectHeight),\n                    width: Math.min(box.width * scale - 6, rectWidth),\n                    top: rectHeight / 6,\n                    left: 0,\n                }}\n            />\n        );\n\n        return (\n\n            <div className=\"main-div\">\n                <div className=\"typography\">Add photo</div>\n                <div className=\"webcam-div\">\n                    <Webcam\n                        style={{\n                            top: top,\n                            left: left,\n                            ...getTransformProperty(this.props.mirror, scale, left, -top),\n                        }}\n                        className=\"webcam-video\"\n                        audio={false}\n                        imageSmoothing={true}\n                        height={videoCnstrts.height}\n                        width={videoCnstrts.width}\n                        ref={this.props.setRef}\n                        screenshotFormat=\"image/jpeg\"\n                        screenshotQuality={1}\n                        videoConstraints={videoCnstrts}\n                        onUserMedia={this.props.onUserMedia}\n                    />\n                </div>\n                {drawBox}\n                <div className=\"oval-container\">\n                    <div className=\"oval\"/>\n                </div>\n                <div className=\"vl\"/>\n                <div className=\"hl\"/>\n\n                <input className=\"fileInput\"\n                       type=\"file\"\n                       onChange={this.props.handlePhotoChoose}\n                       ref={input => this.fileInput = input}/>\n                <button className=\"secondary-button photo-button\" onClick={this.onChoosePhoto}/>\n                <button className=\"main-button\" onClick={this.props.onCapture}>Pick photo</button>\n                <button className=\"next-button next-button\" onClick={this.props.onNext}/>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class CheckPhoto extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onNext = this.onNext.bind(this);\n    }\n\n    onNext() {\n        console.log(\"next\");\n    }\n\n    render() {\n        return (<div className=\"main-div\">\n            <div className=\"typography\">Confirm photo</div>\n            <img className=\"check-photo-img\" src={this.props.imageSrc}/>\n            <button className=\"secondary-button back-button\" onClick={this.props.onBack}/>\n            <button className=\"main-button\" onClick={this.props.onConfirm}>Confirm</button>\n            <button className=\"next-button next-button\" onClick={this.onNext}/>\n        </div>);\n    }\n\n}","import React from 'react';\nimport '../static/css/checkbox.css';\n\nexport default class Checkbox extends React.Component {\n\n    render() {\n        return (<label className=\"checkbox\">{this.props.label}\n            <input type=\"checkbox\" checked={this.props.value} onChange={this.props.onChange}/>\n            <span className=\"checkmark\"/>\n        </label>);\n    }\n}\n\nCheckbox.defaultProps = {\n    value: false,\n    label: ''\n};","class ImageProcessor {\n\n    mirrorImage(imageData) {\n        const pixelArray = toPixelArray(imageData.data);\n        const pixelArray2D = to2Darray(pixelArray, imageData.width, imageData.height);\n        const mirrored2DPixelArray = mirror2DArrayByX(pixelArray2D);\n        const flattenPixelArray = toFlatArray(mirrored2DPixelArray);\n        const arrayRGBA = pixelArrayToArrayOfRGBA(flattenPixelArray);\n        const mirroredImageData = new ImageData(new Uint8ClampedArray(arrayRGBA), imageData.width, imageData.height);\n        return mirroredImageData;\n    }\n\n}\n\nexport default new ImageProcessor();\n\nfunction toPixelArray(arrayRGBA) {\n    const pixelArray = new Array(arrayRGBA.length / 4);\n    for (let i = 0; i < arrayRGBA.length / 4; i++) {\n        pixelArray[i] = {\n            r: arrayRGBA[i * 4],\n            g: arrayRGBA[i * 4 + 1],\n            b: arrayRGBA[i * 4 + 2],\n            a: arrayRGBA[i * 4 + 3]\n        }\n    }\n    return pixelArray;\n}\n\nfunction to2Darray(flatArray, width, height) {\n    const array2D = new Array(height);\n    for (let i = 0; i < height; ++i)\n        array2D[i] = flatArray.slice(i * width, (i + 1) * width);\n    return array2D;\n}\n\nfunction mirror2DArrayByX(array2D) {\n    for (let i = 0; i < array2D.length; ++i)\n        array2D[i] = array2D[i].reverse();\n    return array2D;\n}\n\nfunction toFlatArray(array2D) {\n    const flatArray = [];\n    for (let i = 0; i < array2D.length; ++i)\n        flatArray.push(...array2D[i]);\n    return flatArray;\n}\n\nfunction pixelArrayToArrayOfRGBA(pixelArray) {\n    const arrayRGBA = [];\n    pixelArray.forEach(pixel => arrayRGBA.push(pixel.r, pixel.g, pixel.b, pixel.a));\n    return arrayRGBA;\n}","import ImageDataMirrorer from \"./ImageDataMirrorer\";\n\nclass ImageMirrorer {\n\n    constructor() {\n        this.set = new Set();\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.img = new Image();\n        this.finishMirroring = this.finishMirroring.bind(this);\n    }\n\n    captureAndMirrorImage(webcam, passImageFunc) {\n        this.set.add(passImageFunc);\n        this.img.onload = this.finishMirroring;\n        this.img.src = webcam.getScreenshot();\n    }\n\n\n    async finishMirroring() {\n        this.canvas.width = this.img.width;\n        this.canvas.height = this.img.height;\n        this.ctx.drawImage(this.img, 0, 0);\n\n        const currentImageData = this.ctx.getImageData(this.img.x, this.img.y, this.img.width, this.img.height);\n        const mirroredImageData = ImageDataMirrorer.mirrorImage(currentImageData);\n        this.ctx.putImageData(mirroredImageData, 0, 0, 0, 0, currentImageData.width, currentImageData.height);\n\n        for (let f of this.set)\n            f(this.canvas.toDataURL());\n        this.set.clear();\n    }\n\n}\n\nexport default new ImageMirrorer();","import ImageMirrorer from \"./ImageMirrorer\";\nimport * as faceapi from \"face-api.js\";\n\nclass FaceDetector {\n\n    constructor() {\n        this.faceDetection = this.faceDetection.bind(this);\n        this.detectFace = this.detectFace.bind(this);\n        this.getFullFaceDescription = this.getFullFaceDescription.bind(this);\n    }\n\n    async loadModels() {\n        const MODEL_URL = './models';\n        await faceapi.loadMtcnnModel(MODEL_URL);\n        await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n        await faceapi.loadFaceLandmarkModel(MODEL_URL);\n        await faceapi.loadFaceRecognitionModel(MODEL_URL);\n    }\n\n    faceDetection(mirror, webcam, setFaceBox, callback) {\n        this.setFaceBox = setFaceBox;\n        this.callback = callback;\n            mirror ?\n                ImageMirrorer.captureAndMirrorImage(webcam, this.detectFace)\n                :\n                this.detectFace(webcam.getScreenshot());\n    }\n\n    async detectFace(src) {\n        await this.getFullFaceDescription(\n            src,\n        ).then(fullDesc => {\n            if (!!fullDesc && !!fullDesc.detection)\n                this.setFaceBox({\n                    x: fullDesc.detection.box.x,\n                    y: fullDesc.detection.box.y,\n                    width: fullDesc.detection.box.width,\n                    height: fullDesc.detection.box.height,\n                });\n            this.callback();\n        });\n    }\n\n    async getFullFaceDescription(src) {\n        let img = await faceapi.fetchImage(src);\n        const mtcnnParams = {\n            minFaceSize: 100\n        };\n        let res = await faceapi.mtcnn(img, mtcnnParams);\n        return res[0];\n    }\n\n}\n\nexport default new FaceDetector();","export function checkCameraExists() {\n    navigator.getMedia = (navigator.getUserMedia || // use the proper vendor prefix\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia);\n\n    navigator.getMedia({video: true}, () => {\n    }, () => alert(\"camera isn't available\"));\n}\n\nconst ResolutionsToCheck = [\n    {width: 160, height: 120},\n    {width: 320, height: 180},\n    {width: 320, height: 240},\n    {width: 640, height: 360},\n    {width: 640, height: 480},\n    {width: 768, height: 576},\n    {width: 1024, height: 576},\n    {width: 1280, height: 720},\n    {width: 1280, height: 768},\n    {width: 1280, height: 800},\n    {width: 1280, height: 900},\n    {width: 1280, height: 1000},\n    {width: 1920, height: 1080},\n    {width: 1920, height: 1200},\n    {width: 2560, height: 1440},\n    {width: 3840, height: 2160},\n    {width: 4096, height: 2160}\n];\n\nlet left = 0;\nlet right = ResolutionsToCheck.length;\nlet selectedWidth;\nlet selectedHeight;\nlet mid;\n\nexport async function findMaxResolution() {\n    console.log(\"left = \", left, \", right = \", right);\n    if (left > right) {\n        console.log(\"Selected Height:Width = \", selectedWidth, \":\", selectedHeight);\n        return {height: selectedHeight, width: selectedWidth};\n    }\n\n    mid = Math.floor((left + right) / 2);\n\n    const temporaryConstraints = {\n        video: {\n            mandatory: {\n                minWidth: ResolutionsToCheck[mid].width,\n                minHeight: ResolutionsToCheck[mid].height,\n                maxWidth: ResolutionsToCheck[mid].width,\n                maxHeight: ResolutionsToCheck[mid].height\n            }\n        }\n    };\n\n    return navigator.mediaDevices.getUserMedia(temporaryConstraints)\n        .then(stream => {\n            console.log(\"Success for --> \", mid, \" \", ResolutionsToCheck[mid]);\n            selectedWidth = ResolutionsToCheck[mid].width;\n            selectedHeight = ResolutionsToCheck[mid].height;\n            left = mid + 1;\n            for (let track of stream.getTracks()) {\n                track.stop()\n            }\n            return findMaxResolution();\n        }).catch(error => {\n            console.log(\"Failed for --> \" + mid, \" \", ResolutionsToCheck[mid], \" \", error);\n            right = mid - 1;\n            return findMaxResolution();\n        });\n}","class ImageCuter {\n\n    constructor() {\n        this.set = new Set();\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.img = new Image();\n        this.cutPart = this.cutPart.bind(this);\n    }\n\n    getPartOfAnImage(imageSrc, x, y, width, height, passImageFunc) {\n        this.set.add(passImageFunc);\n        this.subImage = {x, y, width, height};\n        this.img.onload = this.cutPart;\n        this.img.src = imageSrc;\n    }\n\n    cutPart() {\n        this.canvas.width = this.img.width;\n        this.canvas.height = this.img.height;\n        this.ctx.drawImage(this.img, 0, 0, 640, 480, this.subImage.x, this.subImage.y, this.subImage.width, this.subImage.height);\n        for (let f of this.set)\n            f(this.canvas.toDataURL());\n    }\n}\n\nexport default new ImageCuter();","import React from 'react';\nimport CapturePhoto from \"./elems/CapturePhoto\";\nimport axios from 'axios';\nimport './static/css/app.css';\nimport CheckPhoto from \"./elems/CheckPhoto\";\nimport Checkbox from \"./elems/Checkbox\";\nimport FaceDetector from \"./utils/FaceDetector\";\nimport {findMaxResolution} from \"./utils/utils\";\nimport ImageCuter from \"./utils/ImageCuter\";\n\nexport default class App extends React.Component {\n\n    setRef = webcam => this.webcam = webcam;\n\n    constructor(props) {\n        super(props);\n        this.webcam = null;\n        const viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n        const viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n        this.state = {\n            imageSrc: null,\n            mirror: true,\n            handling: true,\n            faceBox: {\n                x: 0,\n                y: 0,\n                width: viewportHeight * 0.45,\n                height: viewportHeight * 0.4,\n            },\n            videoConstraints: {\n                width: 640,\n                height: 480,\n                frameRate: 60,\n                facingMode: \"user\",\n            },\n            viewport: {\n                width: viewportWidth,\n                height: viewportHeight,\n            },\n        };\n\n        this.handleResize = this.handleResize.bind(this);\n        this.setRef = this.setRef.bind(this);\n\n        this.onCapture = this.onCapture.bind(this);\n        this.onConfirm = this.onConfirm.bind(this);\n        this.onBack = this.onBack.bind(this);\n\n        this.setImage = this.setImage.bind(this);\n        this.setFaceBox = this.setFaceBox.bind(this);\n        this.setVideoConstraintsResolution = this.setVideoConstraintsResolution.bind(this);\n        this.onMirrorChange = this.onMirrorChange.bind(this);\n\n        this.handlingCurrentFrame = this.handlingCurrentFrame.bind(this);\n        this.handlePhotoChoose = this.handlePhotoChoose.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.handleResize);\n        findMaxResolution().then(this.setVideoConstraintsResolution);\n        FaceDetector.loadModels()\n            .then(this.handlingCurrentFrame);\n    }\n\n    handleResize() {\n        this.setState({\n            viewport: {\n                width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n                height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0),\n            },\n        });\n    }\n\n    handlingCurrentFrame() {\n        //console.log(\"enter handling\");\n        if (this.state.handling && !!this.webcam) {\n            FaceDetector.faceDetection(\n                this.state.mirror,\n                this.webcam,\n                this.setFaceBox,\n                this.handlingCurrentFrame\n            );\n            //   console.log(\"oo, handling!\");\n        }\n    };\n\n    onCapture() {\n        const screen = this.webcam.getScreenshot();\n        ImageCuter.getPartOfAnImage(screen, 0, 0, 300, 300, this.setImage);\n        this.setState({handling: false});\n    }\n\n    onConfirm() {\n        axios.post(\"/addImage\", this.state.imageSrc);\n        console.log(this.state.imageSrc);\n    }\n\n    onBack() {\n        this.setState({handling: true});\n        this.setImage(null);\n        setTimeout(this.handlingCurrentFrame, 3000);\n    }\n\n    onMirrorChange(e) {\n        this.setState({\n            mirror: e.target.checked\n        });\n    }\n\n    setFaceBox(faceBox) {\n        if (this.isFarFromCurrent(faceBox))\n            this.setState({\n                faceBox: faceBox\n            });\n    }\n\n    setVideoConstraintsResolution(resolution) {\n        this.setState({\n            videoConstraints: {\n                ...this.state.videoConstraints,\n                ...resolution\n            }\n        });\n    }\n\n    isFarFromCurrent(faceBox) {\n        const threshold = 20;\n        return Math.abs(faceBox.x - this.state.faceBox.x) > threshold ||\n            Math.abs(faceBox.y - this.state.faceBox.y) > threshold;\n    }\n\n    setImage(src) {\n        this.setState({\n            imageSrc: src\n        });\n    }\n\n    handlePhotoChoose(e) {\n        e.preventDefault();\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadend = () => this.setImage(reader.result);\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n\n        const checkPhoto = (<CheckPhoto videoConstraints={this.state.videoConstraints}\n                                        imageSrc={this.state.imageSrc}\n                                        onConfirm={this.onConfirm}\n                                        onBack={this.onBack}/>);\n\n        const capturePhoto = (<CapturePhoto webcam={this.webcam}\n                                            setRef={this.setRef}\n                                            {...this.state}\n                                            onUserMedia={this.handlingCurrentFrame()}\n                                            onCapture={this.onCapture}\n                                            onNext={this.handlingCurrentFrame}\n                                            handlePhotoChoose={this.handlePhotoChoose}\n                                            setLeftInfo={this.setLeftInfo}\n                                            setTopInfo={this.setTopInfo}/>);\n\n\n        return (<div style={{display: 'flex'}}>\n            {this.state.imageSrc ? checkPhoto : capturePhoto}\n            <Checkbox value={this.state.mirror}\n                      onChange={this.onMirrorChange}\n                      label=\"mirror\"/>\n        </div>);\n    }\n\n}","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}