{"version":3,"sources":["elems/CapturePhoto.js","elems/CheckPhoto.js","elems/Checkbox.js","utils/ImageDataMirrorer.js","utils/ImageMirrorer.js","utils/FaceDetector.js","utils/utils.js","utils/ImageCuter.js","App.js","index.js"],"names":["getTransformProperty","isMirror","scaleFactor","x","y","transformValue","MozTransform","WebkitTransform","OTransform","transform","CapturePhoto","fileInput","React","createRef","onChoosePhoto","_this","click","videoCnstrts","this","props","videoConstraints","box","faceBox","rectWidth","viewport","height","rectHeight","videoMidX","width","videoMidY","minScale","Math","max","requiredScale","scale","relX","relY","leftVal","topVal","dx","dy","minTop","maxTop","minLeft","maxLeft","left","min","top","console","log","_this2","_this$calculateScaleL","calculateScaleLeftTop","drawBox","react_default","a","createElement","className","style","position","react_webcam_default","Object","objectSpread","mirror","audio","imageSmoothing","ref","setRef","screenshotFormat","screenshotQuality","onUserMedia","type","onChange","handlePhotoChoose","input","onClick","onCapture","onNext","Component","CheckPhoto","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","src","imageSrc","onBack","onConfirm","Checkbox","label","checked","value","defaultProps","ImageDataMirrorer","imageData","arrayRGBA","pixelArray","forEach","pixel","push","r","g","b","pixelArrayToArrayOfRGBA","array2D","flatArray","i","length","apply","toConsumableArray","toFlatArray","reverse","mirror2DArrayByX","Array","slice","to2Darray","toPixelArray","data","ImageData","Uint8ClampedArray","utils_ImageMirrorer","ImageMirrorer","set","Set","canvas","document","ctx","getContext","img","Image","finishMirroring","webcam","passImageFunc","add","onload","getScreenshot","drawImage","currentImageData","getImageData","mirroredImageData","mirrorImage","putImageData","_iterator","Symbol","iterator","_iteratorNormalCompletion","_step","next","done","f","toDataURL","clear","utils_FaceDetector","FaceDetector","faceDetection","detectFace","getFullFaceDescription","MODEL_URL","faceapi","setFaceBox","callback","captureAndMirrorImage","then","fullDesc","detection","mtcnnParams","minFaceSize","res","selectedWidth","selectedHeight","mid","ResolutionsToCheck","right","findMaxResolution","_findMaxResolution","arguments","_callee","temporaryConstraints","regenerator_default","wrap","_context","prev","abrupt","floor","video","mandatory","minWidth","minHeight","maxWidth","maxHeight","navigator","mediaDevices","getUserMedia","stream","_didIteratorError","_iteratorError","undefined","getTracks","stop","err","return","catch","error","ImageCuter","ImageCropper","crop","frameToCrop","subImage","viewportWidth","documentElement","clientWidth","window","innerWidth","viewportHeight","clientHeight","innerHeight","App","state","handling","capturedFrame","frameRate","facingMode","componentDidMount","addEventListener","handleResize","setVideoConstraintsResolution","loadModels","handlingCurrentFrame","setState","setFaceBoxAndCalculateCapturedFrame","ReactGA","event","category","action","cropCapturedImage","cropImage","setImage","axios","post","setTimeout","onMirrorChange","e","target","frameHeight","frameWidth","estimatedFrameWidth","estimatedFrameHeight","frameX","frameY","isFarFromCurrent","resolution","abs","preventDefault","reader","FileReader","file","files","onloadend","result","readAsDataURL","checkPhoto","CheckPhoto_CheckPhoto","capturePhoto","CapturePhoto_CapturePhoto","assign","setLeftInfo","setTopInfo","display","justifyContent","Checkbox_Checkbox","ReactDOM","render","App_App","getElementById"],"mappings":"wWAGA,SAASA,EAAqBC,EAAUC,EAAaC,EAAGC,GACpD,IAM6BC,EAJ7B,MAKO,CACHC,aAFyBD,EANV,UAAYJ,EAAW,IAAM,IAAMC,EAAc,KAAOA,EAAc,IASrFK,gBAAiBF,EACjBG,WAAYH,EACZI,UAAWJ,OAIEK,6MAEjBC,UAAYC,IAAMC,cAElBC,cAAgB,WACZC,EAAKJ,UAAUK,gGAIf,IAAMC,EAAeC,KAAKC,MAAMC,iBAC1BC,EAAMH,KAAKC,MAAMG,QACjBC,EAAyC,IAA7BL,KAAKC,MAAMK,SAASC,OAChCC,EAA0C,GAA7BR,KAAKC,MAAMK,SAASC,OAEjCE,EAAYV,EAAaW,MAAQ,EACjCC,EAAYZ,EAAaQ,OAAS,EAElCK,EAAWC,KAAKC,IAAIT,EAAYN,EAAaW,MAAOF,EAAaT,EAAaQ,QAC9EQ,EAAgBV,EAAYF,EAAIO,MAChCM,EAAQH,KAAKC,IAAIF,EAAUG,GAE3BE,EAAOd,EAAIlB,EAAIwB,EACfS,EAAOf,EAAIjB,EAAIyB,EAEfQ,GAAWpB,EAAaW,MAAQ,EAAIO,EAAOD,EAC3CI,GAAUrB,EAAaQ,OAAS,EAAIW,EAAOF,EAAQR,EAAa,EAEhEa,EAAKtB,EAAaW,MAAQ,GAAKM,EAAQ,GACvCM,EAAKvB,EAAaQ,OAAS,GAAKS,EAAQ,GAGxCO,IAAWxB,EAAaQ,OAASe,EAAKd,GACtCgB,EAASF,EACTG,IAAY1B,EAAaW,MAAQW,EAAKhB,GACtCqB,EAAUL,EAEVM,EAAOd,KAAKe,IAAIf,KAAKC,IAAIK,EAASM,GAAUC,GAC5CG,EAAMhB,KAAKe,IAAIf,KAAKC,IAAIM,EAAQG,GAASC,GAM/C,OAJAM,QAAQC,IAAIf,EAAQ,IAAMW,EAAO,IAAME,GACvCC,QAAQC,IAAI,kBAAoB5B,EAAIO,OACpCoB,QAAQC,MAED,CAACf,QAAOW,OAAME,wCAGhB,IAAAG,EAAAhC,KAECD,EAAeC,KAAKC,MAAMC,iBAC1BC,EAAMH,KAAKC,MAAMG,QACjBC,EAAyC,IAA7BL,KAAKC,MAAMK,SAASC,OAChCC,EAA0C,GAA7BR,KAAKC,MAAMK,SAASC,OALlC0B,EAOsBjC,KAAKkC,wBAAzBlB,EAPFiB,EAOEjB,MAAOW,EAPTM,EAOSN,KAAME,EAPfI,EAOeJ,IAEdM,EACFC,EAAAC,EAAAC,cAAA,OACIC,UAAU,WACVC,MAAO,CACHC,SAAU,WACVlC,OAAQM,KAAKe,IAAIzB,EAAII,OAASS,EAAQ,EAAGR,GACzCE,MAAOG,KAAKe,IAAIzB,EAAIO,MAAQM,EAAQ,EAAGX,GACvCwB,IAAKrB,EAAa,EAClBmB,KAAM,KAKlB,OAEIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CACIG,MAAKG,OAAAC,EAAA,EAAAD,CAAA,CACDd,IAAKA,EACLF,KAAMA,GACH7C,EAAqBkB,KAAKC,MAAM4C,OAAQ7B,IAE/CuB,UAAU,eACVO,OAAO,EACPC,gBAAgB,EAChBxC,OAAQR,EAAaQ,OACrBG,MAAOX,EAAaW,MACpBsC,IAAKhD,KAAKC,MAAMgD,OAChBC,iBAAiB,aACjBC,kBAAmB,EACnBjD,iBAAkBH,EAClBqD,YAAapD,KAAKC,MAAMmD,eAG/BjB,EACDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEfH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YACVc,KAAK,OACLC,SAAUtD,KAAKC,MAAMsD,kBACrBP,IAAK,SAAAQ,GAAK,OAAIxB,EAAKvC,UAAY+D,KACtCpB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gCAAgCkB,QAASzD,KAAKJ,gBAChEwC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAckB,QAASzD,KAAKC,MAAMyD,WAApD,cACAtB,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAA0BkB,QAASzD,KAAKC,MAAM0D,iBAxGtCjE,IAAMkE,8CCjB3BC,cAEjB,SAAAA,EAAY5D,GAAO,IAAAJ,EAAA,OAAA8C,OAAAmB,EAAA,EAAAnB,CAAA3C,KAAA6D,IACfhE,EAAA8C,OAAAoB,EAAA,EAAApB,CAAA3C,KAAA2C,OAAAqB,EAAA,EAAArB,CAAAkB,GAAAI,KAAAjE,KAAMC,KACD0D,OAAS9D,EAAK8D,OAAOO,KAAZvB,OAAAwB,EAAA,EAAAxB,QAAAwB,EAAA,EAAAxB,CAAA9C,KAFCA,wEAMfiC,QAAQC,IAAI,yCAIZ,OAAQK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,iBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB6B,IAAKpE,KAAKC,MAAMoE,WACjDjC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,+BAA+BkB,QAASzD,KAAKC,MAAMqE,SACrElC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAckB,QAASzD,KAAKC,MAAMsE,WAApD,WACAnC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAA0BkB,QAASzD,KAAK2D,iBAjB9BjE,IAAMkE,WCCzBY,2LAGb,OAAQpC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,YAAYvC,KAAKC,MAAMwE,MAC5CrC,EAAAC,EAAAC,cAAA,SAAOe,KAAK,WAAWqB,QAAS1E,KAAKC,MAAM0E,MAAOrB,SAAUtD,KAAKC,MAAMqD,WACvElB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBALU7C,IAAMkE,YAU5CY,EAASI,aAAe,CACpBD,OAAO,EACPF,MAAO,0CCDII,EAAA,wGAZCC,GACR,IAIMC,EA0Cd,SAAiCC,GAC7B,IAAMD,EAAY,GAElB,OADAC,EAAWC,QAAQ,SAAAC,GAAK,OAAIH,EAAUI,KAAKD,EAAME,EAAGF,EAAMG,EAAGH,EAAMI,EAAGJ,EAAM7C,KACrE0C,EA7CeQ,CAmC1B,SAAqBC,GAEjB,IADA,IAAMC,EAAY,GACTC,EAAI,EAAGA,EAAIF,EAAQG,SAAUD,EAClCD,EAAUN,KAAVS,MAAAH,EAAS9C,OAAAkD,EAAA,EAAAlD,CAAS6C,EAAQE,KAC9B,OAAOD,EAxCuBK,CA8BlC,SAA0BN,GACtB,IAAK,IAAIE,EAAI,EAAGA,EAAIF,EAAQG,SAAUD,EAClCF,EAAQE,GAAKF,EAAQE,GAAGK,UAC5B,OAAOP,EAlC0BQ,CAwBrC,SAAmBP,EAAW/E,EAAOH,GAEjC,IADA,IAAMiF,EAAU,IAAIS,MAAM1F,GACjBmF,EAAI,EAAGA,EAAInF,IAAUmF,EAC1BF,EAAQE,GAAKD,EAAUS,MAAMR,EAAIhF,GAAQgF,EAAI,GAAKhF,GACtD,OAAO8E,EA7BkBW,CAY7B,SAAsBpB,GAElB,IADA,IAAMC,EAAa,IAAIiB,MAAMlB,EAAUY,OAAS,GACvCD,EAAI,EAAGA,EAAIX,EAAUY,OAAS,EAAGD,IACtCV,EAAWU,GAAK,CACZN,EAAGL,EAAc,EAAJW,GACbL,EAAGN,EAAc,EAAJW,EAAQ,GACrBJ,EAAGP,EAAc,EAAJW,EAAQ,GACrBrD,EAAG0C,EAAc,EAAJW,EAAQ,IAG7B,OAAOV,EAvBgBoB,CAAatB,EAAUuB,MACCvB,EAAUpE,MAAOoE,EAAUvE,WAKtE,OAD0B,IAAI+F,UAAU,IAAIC,kBAAkBxB,GAAYD,EAAUpE,MAAOoE,EAAUvE,sBC2B9FiG,EAAA,eA/BX,SAAAC,IAAe9D,OAAAmB,EAAA,EAAAnB,CAAA3C,KAAAyG,GACXzG,KAAK0G,IAAM,IAAIC,IACf3G,KAAK4G,OAASC,SAASvE,cAAc,UACrCtC,KAAK8G,IAAM9G,KAAK4G,OAAOG,WAAW,MAClC/G,KAAKgH,IAAM,IAAIC,MACfjH,KAAKkH,gBAAkBlH,KAAKkH,gBAAgBhD,KAAKlE,wEAG/BmH,EAAQC,GAC1BpH,KAAK0G,IAAIW,IAAID,GACbpH,KAAKgH,IAAIM,OAAStH,KAAKkH,gBACvBlH,KAAKgH,IAAI5C,IAAM+C,EAAOI,oLAatB,IARAvH,KAAK4G,OAAOlG,MAAQV,KAAKgH,IAAItG,MAC7BV,KAAK4G,OAAOrG,OAASP,KAAKgH,IAAIzG,OAC9BP,KAAK8G,IAAIU,UAAUxH,KAAKgH,IAAK,EAAG,GAE1BS,EAAmBzH,KAAK8G,IAAIY,aAAa1H,KAAKgH,IAAI/H,EAAGe,KAAKgH,IAAI9H,EAAGc,KAAKgH,IAAItG,MAAOV,KAAKgH,IAAIzG,QAC1FoH,EAAoB9C,EAAkB+C,YAAYH,GACxDzH,KAAK8G,IAAIe,aAAaF,EAAmB,EAAG,EAAG,EAAG,EAAGF,EAAiB/G,MAAO+G,EAAiBlH,oCAE9FuH,EAAc9H,KAAK0G,IAAnBqB,OAAAC,cAAAC,GAAAC,EAAAJ,EAAAK,QAAAC,MAAAH,GAAA,GAASI,EAATH,EAAAvD,OACM3E,KAAK4G,OAAO0B,sPAClBtI,KAAK0G,IAAI6B,wJCwBFC,EAAA,eAjDX,SAAAC,IAAe9F,OAAAmB,EAAA,EAAAnB,CAAA3C,KAAAyI,GACXzI,KAAK0I,cAAgB1I,KAAK0I,cAAcxE,KAAKlE,MAC7CA,KAAK2I,WAAa3I,KAAK2I,WAAWzE,KAAKlE,MACvCA,KAAK4I,uBAAyB5I,KAAK4I,uBAAuB1E,KAAKlE,oLAIzD6I,EAAY,oBACZC,IAAuBD,0BACvBC,IAAgCD,0BAChCC,IAA8BD,0BAC9BC,IAAiCD,2IAG7BhG,EAAQsE,EAAQ4B,EAAYC,GACtChJ,KAAK+I,WAAaA,EAClB/I,KAAKgJ,SAAWA,EACZnG,EACI4D,EAAcwC,sBAAsB9B,EAAQnH,KAAK2I,YAEjD3I,KAAK2I,WAAWxB,EAAOI,4FAGlBnD,8FACPpE,KAAK4I,uBACPxE,GACF8E,KAAK,SAAAC,GACGA,GAAcA,EAASC,WACzBvJ,EAAKkJ,WAAW,CACZ9J,EAAGkK,EAASC,UAAUjJ,IAAIlB,EAC1BC,EAAGiK,EAASC,UAAUjJ,IAAIjB,EAC1BwB,MAAOyI,EAASC,UAAUjJ,IAAIO,MAC9BH,OAAQ4I,EAASC,UAAUjJ,IAAII,SAEvCV,EAAKmJ,uMAIgB5E,6FACT0E,IAAmB1E,iBAA/B4C,SACEqC,EAAc,CAChBC,YAAa,cAEDR,IAAc9B,EAAKqC,iBAA/BE,2BACGA,EAAI,iHCvCnB,IAsBIC,EACAC,EACAC,EAxBEC,EAAqB,CACvB,CAACjJ,MAAO,IAAKH,OAAQ,KACrB,CAACG,MAAO,IAAKH,OAAQ,KACrB,CAACG,MAAO,IAAKH,OAAQ,KACrB,CAACG,MAAO,IAAKH,OAAQ,KACrB,CAACG,MAAO,IAAKH,OAAQ,KACrB,CAACG,MAAO,IAAKH,OAAQ,KACrB,CAACG,MAAO,KAAMH,OAAQ,KACtB,CAACG,MAAO,KAAMH,OAAQ,KACtB,CAACG,MAAO,KAAMH,OAAQ,KACtB,CAACG,MAAO,KAAMH,OAAQ,KACtB,CAACG,MAAO,KAAMH,OAAQ,KACtB,CAACG,MAAO,KAAMH,OAAQ,KACtB,CAACG,MAAO,KAAMH,OAAQ,MACtB,CAACG,MAAO,KAAMH,OAAQ,MACtB,CAACG,MAAO,KAAMH,OAAQ,MACtB,CAACG,MAAO,KAAMH,OAAQ,MACtB,CAACG,MAAO,KAAMH,OAAQ,OAGtBoB,EAAO,EACPiI,EAAQD,EAAmBhE,OAKxB,SAAekE,IAAtB,OAAAC,EAAAlE,MAAA5F,KAAA+J,sDAAO,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAA7H,EAAA8H,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAjC,MAAA,UACHrG,QAAQC,IAAI,UAAWJ,EAAM,aAAciI,KACvCjI,EAAOiI,GAFR,CAAAQ,EAAAjC,KAAA,eAGCrG,QAAQC,IAAI,2BAA4ByH,EAAe,IAAKC,GAH7DW,EAAAE,OAAA,SAIQ,CAAC/J,OAAQkJ,EAAgB/I,MAAO8I,IAJxC,cAOHE,EAAM7I,KAAK0J,OAAO5I,EAAOiI,GAAS,GAE5BK,EAAuB,CACzBO,MAAO,CACHC,UAAW,CACPC,SAAUf,EAAmBD,GAAKhJ,MAClCiK,UAAWhB,EAAmBD,GAAKnJ,OACnCqK,SAAUjB,EAAmBD,GAAKhJ,MAClCmK,UAAWlB,EAAmBD,GAAKnJ,UAf5C6J,EAAAE,OAAA,SAoBIQ,UAAUC,aAAaC,aAAaf,GACtCf,KAAK,SAAA+B,GACFnJ,QAAQC,IAAI,sBAAoB2H,EAAK,IAAKC,EAAmBD,IAC7DF,EAAgBG,EAAmBD,GAAKhJ,MACxC+I,EAAiBE,EAAmBD,GAAKnJ,OACzCoB,EAAO+H,EAAM,EAJD,IAAAzB,GAAA,EAAAiD,GAAA,EAAAC,OAAAC,EAAA,IAKZ,QAAAlD,EAAAJ,EAAkBmD,EAAOI,YAAzBtD,OAAAC,cAAAC,GAAAC,EAAAJ,EAAAK,QAAAC,MAAAH,GAAA,EAAsC,CAAAC,EAAAvD,MAC5B2G,QANE,MAAAC,GAAAL,GAAA,EAAAC,EAAAI,EAAA,YAAAtD,GAAA,MAAAH,EAAA0D,QAAA1D,EAAA0D,SAAA,WAAAN,EAAA,MAAAC,GAQZ,OAAOtB,MACR4B,MAAM,SAAAC,GAGL,OAFA5J,QAAQC,IAAI,qBAAoB2H,EAAK,IAAKC,EAAmBD,GAAM,IAAKgC,GACxE9B,EAAQF,EAAM,EACPG,OAjCZ,wBAAAO,EAAAkB,SAAAtB,EAAAhK,oCCEQ2L,EAAA,eApCX,SAAAC,IAAejJ,OAAAmB,EAAA,EAAAnB,CAAA3C,KAAA4L,GACX5L,KAAK0G,IAAM,IAAIC,IACf3G,KAAK4G,OAASC,SAASvE,cAAc,UACrCtC,KAAK8G,IAAM9G,KAAK4G,OAAOG,WAAW,MAClC/G,KAAKgH,IAAM,IAAIC,MACfjH,KAAK6L,KAAO7L,KAAK6L,KAAK3H,KAAKlE,4DAGrBqE,EAAUyH,EAAazL,EAAWG,EAAY4G,GACpDpH,KAAK0G,IAAIW,IAAID,GACbpH,KAAK+L,SAAWD,EAChB9L,KAAKK,UAAYA,EACjBL,KAAKQ,WAAaA,EAClBR,KAAKgH,IAAIM,OAAStH,KAAK6L,KACvB7L,KAAKgH,IAAI5C,IAAMC,iCAIfrE,KAAK4G,OAAOlG,MAAQV,KAAKK,UACzBL,KAAK4G,OAAOrG,OAASP,KAAKQ,WAC1BR,KAAK8G,IAAIU,UAAUxH,KAAKgH,IACpBhH,KAAK+L,SAAS9M,EACde,KAAK+L,SAAS7M,EACdc,KAAK+L,SAASrL,MACdV,KAAK+L,SAASxL,OACd,EACA,EACAP,KAAKK,UACLL,KAAKQ,YAXN,IAAAyH,GAAA,EAAAiD,GAAA,EAAAC,OAAAC,EAAA,IAYH,QAAAlD,EAAAJ,EAAc9H,KAAK0G,IAAnBqB,OAAAC,cAAAC,GAAAC,EAAAJ,EAAAK,QAAAC,MAAAH,GAAA,IACII,EADJH,EAAAvD,OACM3E,KAAK4G,OAAO0B,cAbf,MAAAiD,GAAAL,GAAA,EAAAC,EAAAI,EAAA,YAAAtD,GAAA,MAAAH,EAAA0D,QAAA1D,EAAA0D,SAAA,WAAAN,EAAA,MAAAC,sBCFX,IAAMa,EAAgBnL,KAAKC,IAAI+F,SAASoF,gBAAgBC,YAAaC,OAAOC,YAAc,GACpFC,EAAiBxL,KAAKC,IAAI+F,SAASoF,gBAAgBK,aAAcH,OAAOI,aAAe,GAExEC,6MAEjBvJ,OAAS,SAAAkE,GAAM,OAAItH,EAAKsH,OAASA,KAEjCA,OAAS,OACTsF,MAAQ,CACJpI,SAAU,KACVxB,QAAQ,EACR6J,UAAU,EACVtM,QAAS,CACLnB,EAAG,EACHC,EAAG,EACHwB,MAAwB,IAAjB2L,EACP9L,OAAyB,GAAjB8L,GAGZM,cAAe,CACX1N,EAAG,EACHC,EAAG,EACHwB,MAAwB,IAAjB2L,EACP9L,OAAyB,GAAjB8L,GAEZnM,iBAAkB,CACdQ,MAAO,IACPH,OAAQ,IACRqM,UAAW,GACXC,WAAY,QAEhBvM,SAAU,CACNI,MAAOsL,EACPzL,OAAQ8L,MAIhBS,kBAAoB,WAChBX,OAAOY,iBAAiB,SAAUlN,EAAKmN,cACvCnD,IAAoBX,KAAKrJ,EAAKoN,+BAC9BxE,EAAayE,aACRhE,KAAKrJ,EAAKsN,yBAGnBH,aAAe,WACXnN,EAAKuN,SAAS,CACV9M,SAAU,CACNI,MAAOG,KAAKC,IAAI+F,SAASoF,gBAAgBC,YAAaC,OAAOC,YAAc,GAC3E7L,OAAQM,KAAKC,IAAI+F,SAASoF,gBAAgBK,aAAcH,OAAOI,aAAe,SAK1FY,qBAAuB,WAEftN,EAAK4M,MAAMC,UAAc7M,EAAKsH,QAC9BsB,EAAaC,cACT7I,EAAK4M,MAAM5J,OACXhD,EAAKsH,OACLtH,EAAKwN,oCACLxN,EAAKsN,yBAMjBzJ,UAAY,WACR4J,IAAQC,MAAM,CACVC,SAAU,OACVC,OAAQ,YAER5N,EAAK4M,MAAM5J,OACX4D,EAAcwC,sBAAsBpJ,EAAKsH,OAAQtH,EAAK6N,mBACrD7N,EAAK6N,kBAAkB7N,EAAKsH,OAAOI,oBAG5CmG,kBAAoB,SAACtJ,GACjB,IAAM/D,EAAyC,IAA7BR,EAAK4M,MAAMnM,SAASC,OAChCC,EAA0C,GAA7BX,EAAK4M,MAAMnM,SAASC,OAEvCoL,EAAWgC,UACPvJ,EACAvE,EAAK4M,MAAME,cACXtM,EACAG,EACAX,EAAK+N,UAET/N,EAAKuN,SAAS,CAACV,UAAU,OAG7BnI,UAAY,WACRsJ,IAAMC,KAAK,YAAajO,EAAK4M,MAAMpI,UACnCvC,QAAQC,IAAIlC,EAAK4M,MAAMpI,aAG3BC,OAAS,WACLzE,EAAKuN,SAAS,CAACV,UAAU,IACzB7M,EAAK+N,SAAS,MACdG,WAAWlO,EAAKsN,qBAAsB,QAG1Ca,eAAiB,SAACC,GACdpO,EAAKuN,SAAS,CACVvK,OAAQoL,EAAEC,OAAOxJ,aAIzB2I,oCAAsC,SAACjN,GAEnC,IAAI+N,EAAaC,EAEXC,EAAsBxN,KAAKe,IAAI/B,EAAK4M,MAAMvM,iBAAiBQ,MAAON,EAAQM,OAC1E4N,EAA6C,GAAtBD,EAA2B,EAGpDC,EAAuBzO,EAAK4M,MAAMvM,iBAAiBK,OAEnD6N,GADAD,EAActO,EAAK4M,MAAMvM,iBAAiBK,QACf,GAAK,GAEhC6N,EAAaC,EACbF,EAAcG,GAGlB,IAAMC,EAAS1N,KAAKe,IAAIf,KAAKC,IAAI,EAAGV,EAAQnB,GAAIY,EAAK4M,MAAMvM,iBAAiBQ,MAAQN,EAAQM,OACtF8N,EAAS3N,KAAKe,IAAIf,KAAKC,IAAI,EAAGV,EAAQlB,EAAIiP,EAAc,GAAItO,EAAK4M,MAAMvM,iBAAiBK,OAAS4N,GAGnGtO,EAAK4O,iBAAiBrO,IACtBP,EAAKuN,SAAS,CACVhN,QAASA,EACTuM,cAAe,CACX1N,EAAGsP,EACHrP,EAAGsP,EACH9N,MAAO0N,EACP7N,OAAQ4N,QAKxBlB,8BAAgC,SAACyB,GAC7B7O,EAAKuN,SAAS,CACVlN,iBAAiByC,OAAAC,EAAA,EAAAD,CAAA,GACV9C,EAAK4M,MAAMvM,iBACXwO,QAKfD,iBAAmB,SAACrO,GAEhB,OAAOS,KAAK8N,IAAIvO,EAAQnB,EAAIY,EAAK4M,MAAMrM,QAAQnB,GAD7B,IAEd4B,KAAK8N,IAAIvO,EAAQlB,EAAIW,EAAK4M,MAAMrM,QAAQlB,GAF1B,MAKtB0O,SAAW,SAACxJ,GACRvE,EAAKuN,SAAS,CACV/I,SAAUD,OAIlBb,kBAAoB,SAAC0K,GACjBA,EAAEW,iBACF,IAAIC,EAAS,IAAIC,WACbC,EAAOd,EAAEC,OAAOc,MAAM,GAC1BH,EAAOI,UAAY,kBAAMpP,EAAK+N,SAASiB,EAAOK,SAC9CL,EAAOM,cAAcJ,4EAKrB,IAAMK,EAAchN,EAAAC,EAAAC,cAAC+M,EAAD,CAAYnP,iBAAkBF,KAAKyM,MAAMvM,iBAC7BmE,SAAUrE,KAAKyM,MAAMpI,SACrBE,UAAWvE,KAAKuE,UAChBD,OAAQtE,KAAKsE,SAEvCgL,EAAgBlN,EAAAC,EAAAC,cAACiN,EAAD5M,OAAA6M,OAAA,CAAcrI,OAAQnH,KAAKmH,OACblE,OAAQjD,KAAKiD,QACTjD,KAAKyM,MAFvB,CAGcrJ,YAAapD,KAAKmN,uBAClBzJ,UAAW1D,KAAK0D,UAChBC,OAAQ3D,KAAKmN,qBACb5J,kBAAmBvD,KAAKuD,kBACxBkM,YAAazP,KAAKyP,YAClBC,WAAY1P,KAAK0P,cAGrD,OAAQtN,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAACmN,QAAS,OAAQjP,MAAO,OAAQkP,eAAgB,WACjExN,EAAAC,EAAAC,cAAA,WACKtC,KAAKyM,MAAMpI,SAAW+K,EAAaE,EACpClN,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAAC9B,MAAwB,IAAjB2L,IAAnB,uHAIJjK,EAAAC,EAAAC,cAACuN,EAAD,CAAUlL,MAAO3E,KAAKyM,MAAM5J,OAClBS,SAAUtD,KAAKgO,eACfvJ,MAAM,mBAhMK/E,IAAMkE,WChBvCkM,IAASC,OAAO3N,EAAAC,EAAAC,cAAC0N,EAAD,MAAQnJ,SAASoJ,eAAe","file":"static/js/main.cb2f67d8.chunk.js","sourcesContent":["import React from 'react';\nimport Webcam from 'react-webcam';\n\nfunction getTransformProperty(isMirror, scaleFactor, x, y) {\n    const scaleValue = 'scale(' + (isMirror ? '-' : '') + scaleFactor + ', ' + scaleFactor + ')';\n    const translateValue = 'translate(' + x + 'px, ' + y + 'px)';\n    return getTransformStyleObject(scaleValue);// + ' ' + translateValue);\n}\n\n\nfunction getTransformStyleObject(transformValue) {\n    return {\n        MozTransform: transformValue,\n        WebkitTransform: transformValue,\n        OTransform: transformValue,\n        transform: transformValue,\n    };\n}\n\nexport default class CapturePhoto extends React.Component {\n\n    fileInput = React.createRef();\n\n    onChoosePhoto = () => {\n        this.fileInput.click();\n    };\n\n    calculateScaleLeftTop() {\n        const videoCnstrts = this.props.videoConstraints;\n        const box = this.props.faceBox;\n        const rectWidth = this.props.viewport.height * 0.45;\n        const rectHeight = this.props.viewport.height * 0.8;\n\n        const videoMidX = videoCnstrts.width / 2;\n        const videoMidY = videoCnstrts.height / 2;\n\n        const minScale = Math.max(rectWidth / videoCnstrts.width, rectHeight / videoCnstrts.height);\n        const requiredScale = rectWidth / box.width;\n        const scale = Math.max(minScale, requiredScale);\n\n        const relX = box.x - videoMidX;\n        const relY = box.y - videoMidY;\n\n        const leftVal = -videoCnstrts.width / 2 - relX * scale;\n        const topVal = -videoCnstrts.height / 2 - relY * scale + rectHeight / 6;\n\n        const dx = videoCnstrts.width / 2 * (scale - 1);\n        const dy = videoCnstrts.height / 2 * (scale - 1);\n\n\n        const minTop = -(videoCnstrts.height + dy - rectHeight);\n        const maxTop = dy;\n        const minLeft = -(videoCnstrts.width + dx - rectWidth);\n        const maxLeft = dx;\n\n        const left = Math.min(Math.max(leftVal, minLeft), maxLeft);\n        const top = Math.min(Math.max(topVal, minTop), maxTop);\n\n        console.log(scale + \" \" + left + \" \" + top);\n        console.log(\"faceBoxWidth = \" + box.width);\n        console.log();\n\n        return {scale, left, top};\n    }\n\n    render() {\n\n        const videoCnstrts = this.props.videoConstraints;\n        const box = this.props.faceBox;\n        const rectWidth = this.props.viewport.height * 0.45;\n        const rectHeight = this.props.viewport.height * 0.8;\n\n        const {scale, left, top} = this.calculateScaleLeftTop();\n\n        const drawBox = (\n            <div\n                className=\"face-box\"\n                style={{\n                    position: 'absolute',\n                    height: Math.min(box.height * scale - 6, rectHeight),\n                    width: Math.min(box.width * scale - 6, rectWidth),\n                    top: rectHeight / 6,\n                    left: 0,\n                }}\n            />\n        );\n\n        return (\n\n            <div className=\"main-div\">\n                <div className=\"typography\">Add photo</div>\n                <div className=\"webcam-div\">\n                    <Webcam\n                        style={{\n                            top: top,\n                            left: left,\n                            ...getTransformProperty(this.props.mirror, scale, left, -top),\n                        }}\n                        className=\"webcam-video\"\n                        audio={false}\n                        imageSmoothing={true}\n                        height={videoCnstrts.height}\n                        width={videoCnstrts.width}\n                        ref={this.props.setRef}\n                        screenshotFormat=\"image/jpeg\"\n                        screenshotQuality={1}\n                        videoConstraints={videoCnstrts}\n                        onUserMedia={this.props.onUserMedia}\n                    />\n                </div>\n                {drawBox}\n                <div className=\"oval-container\">\n                    <div className=\"oval\"/>\n                </div>\n                <div className=\"vl\"/>\n                <div className=\"hl\"/>\n\n                <input className=\"fileInput\"\n                       type=\"file\"\n                       onChange={this.props.handlePhotoChoose}\n                       ref={input => this.fileInput = input}/>\n                <button className=\"secondary-button photo-button\" onClick={this.onChoosePhoto}/>\n                <button className=\"main-button\" onClick={this.props.onCapture}>Pick photo</button>\n                <button className=\"next-button next-button\" onClick={this.props.onNext}/>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nexport default class CheckPhoto extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onNext = this.onNext.bind(this);\n    }\n\n    onNext() {\n        console.log(\"next\");\n    }\n\n    render() {\n        return (<div className=\"main-div\">\n            <div className=\"typography\">Confirm photo</div>\n            <img className=\"check-photo-img\" src={this.props.imageSrc}/>\n            <button className=\"secondary-button back-button\" onClick={this.props.onBack}/>\n            <button className=\"main-button\" onClick={this.props.onConfirm}>Confirm</button>\n            <button className=\"next-button next-button\" onClick={this.onNext}/>\n        </div>);\n    }\n\n}","import React from 'react';\nimport '../static/css/checkbox.css';\n\nexport default class Checkbox extends React.Component {\n\n    render() {\n        return (<label className=\"checkbox\">{this.props.label}\n            <input type=\"checkbox\" checked={this.props.value} onChange={this.props.onChange}/>\n            <span className=\"checkmark\"/>\n        </label>);\n    }\n}\n\nCheckbox.defaultProps = {\n    value: false,\n    label: ''\n};","class ImageProcessor {\n\n    mirrorImage(imageData) {\n        const pixelArray = toPixelArray(imageData.data);\n        const pixelArray2D = to2Darray(pixelArray, imageData.width, imageData.height);\n        const mirrored2DPixelArray = mirror2DArrayByX(pixelArray2D);\n        const flattenPixelArray = toFlatArray(mirrored2DPixelArray);\n        const arrayRGBA = pixelArrayToArrayOfRGBA(flattenPixelArray);\n        const mirroredImageData = new ImageData(new Uint8ClampedArray(arrayRGBA), imageData.width, imageData.height);\n        return mirroredImageData;\n    }\n\n}\n\nexport default new ImageProcessor();\n\nfunction toPixelArray(arrayRGBA) {\n    const pixelArray = new Array(arrayRGBA.length / 4);\n    for (let i = 0; i < arrayRGBA.length / 4; i++) {\n        pixelArray[i] = {\n            r: arrayRGBA[i * 4],\n            g: arrayRGBA[i * 4 + 1],\n            b: arrayRGBA[i * 4 + 2],\n            a: arrayRGBA[i * 4 + 3]\n        }\n    }\n    return pixelArray;\n}\n\nfunction to2Darray(flatArray, width, height) {\n    const array2D = new Array(height);\n    for (let i = 0; i < height; ++i)\n        array2D[i] = flatArray.slice(i * width, (i + 1) * width);\n    return array2D;\n}\n\nfunction mirror2DArrayByX(array2D) {\n    for (let i = 0; i < array2D.length; ++i)\n        array2D[i] = array2D[i].reverse();\n    return array2D;\n}\n\nfunction toFlatArray(array2D) {\n    const flatArray = [];\n    for (let i = 0; i < array2D.length; ++i)\n        flatArray.push(...array2D[i]);\n    return flatArray;\n}\n\nfunction pixelArrayToArrayOfRGBA(pixelArray) {\n    const arrayRGBA = [];\n    pixelArray.forEach(pixel => arrayRGBA.push(pixel.r, pixel.g, pixel.b, pixel.a));\n    return arrayRGBA;\n}","import ImageDataMirrorer from \"./ImageDataMirrorer\";\n\nclass ImageMirrorer {\n\n    constructor() {\n        this.set = new Set();\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.img = new Image();\n        this.finishMirroring = this.finishMirroring.bind(this);\n    }\n\n    captureAndMirrorImage(webcam, passImageFunc) {\n        this.set.add(passImageFunc);\n        this.img.onload = this.finishMirroring;\n        this.img.src = webcam.getScreenshot();\n    }\n\n\n    async finishMirroring() {\n        this.canvas.width = this.img.width;\n        this.canvas.height = this.img.height;\n        this.ctx.drawImage(this.img, 0, 0);\n\n        const currentImageData = this.ctx.getImageData(this.img.x, this.img.y, this.img.width, this.img.height);\n        const mirroredImageData = ImageDataMirrorer.mirrorImage(currentImageData);\n        this.ctx.putImageData(mirroredImageData, 0, 0, 0, 0, currentImageData.width, currentImageData.height);\n\n        for (let f of this.set)\n            f(this.canvas.toDataURL());\n        this.set.clear();\n    }\n\n}\n\nexport default new ImageMirrorer();","import ImageMirrorer from \"./ImageMirrorer\";\nimport * as faceapi from \"face-api.js\";\n\nclass FaceDetector {\n\n    constructor() {\n        this.faceDetection = this.faceDetection.bind(this);\n        this.detectFace = this.detectFace.bind(this);\n        this.getFullFaceDescription = this.getFullFaceDescription.bind(this);\n    }\n\n    async loadModels() {\n        const MODEL_URL = './models';\n        await faceapi.loadMtcnnModel(MODEL_URL);\n        await faceapi.loadSsdMobilenetv1Model(MODEL_URL);\n        await faceapi.loadFaceLandmarkModel(MODEL_URL);\n        await faceapi.loadFaceRecognitionModel(MODEL_URL);\n    }\n\n    faceDetection(mirror, webcam, setFaceBox, callback) {\n        this.setFaceBox = setFaceBox;\n        this.callback = callback;\n            mirror ?\n                ImageMirrorer.captureAndMirrorImage(webcam, this.detectFace)\n                :\n                this.detectFace(webcam.getScreenshot());\n    }\n\n    async detectFace(src) {\n        await this.getFullFaceDescription(\n            src,\n        ).then(fullDesc => {\n            if (!!fullDesc && !!fullDesc.detection)\n                this.setFaceBox({\n                    x: fullDesc.detection.box.x,\n                    y: fullDesc.detection.box.y,\n                    width: fullDesc.detection.box.width,\n                    height: fullDesc.detection.box.height,\n                });\n            this.callback();\n        });\n    }\n\n    async getFullFaceDescription(src) {\n        let img = await faceapi.fetchImage(src);\n        const mtcnnParams = {\n            minFaceSize: 100\n        };\n        let res = await faceapi.mtcnn(img, mtcnnParams);\n        return res[0];\n    }\n\n}\n\nexport default new FaceDetector();","export function checkCameraExists() {\n    navigator.getMedia = (navigator.getUserMedia || // use the proper vendor prefix\n        navigator.webkitGetUserMedia ||\n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia);\n\n    navigator.getMedia({video: true}, () => {\n    }, () => alert(\"camera isn't available\"));\n}\n\nconst ResolutionsToCheck = [\n    {width: 160, height: 120},\n    {width: 320, height: 180},\n    {width: 320, height: 240},\n    {width: 640, height: 360},\n    {width: 640, height: 480},\n    {width: 768, height: 576},\n    {width: 1024, height: 576},\n    {width: 1280, height: 720},\n    {width: 1280, height: 768},\n    {width: 1280, height: 800},\n    {width: 1280, height: 900},\n    {width: 1280, height: 1000},\n    {width: 1920, height: 1080},\n    {width: 1920, height: 1200},\n    {width: 2560, height: 1440},\n    {width: 3840, height: 2160},\n    {width: 4096, height: 2160}\n];\n\nlet left = 0;\nlet right = ResolutionsToCheck.length;\nlet selectedWidth;\nlet selectedHeight;\nlet mid;\n\nexport async function findMaxResolution() {\n    console.log(\"left = \", left, \", right = \", right);\n    if (left > right) {\n        console.log(\"Selected Height:Width = \", selectedWidth, \":\", selectedHeight);\n        return {height: selectedHeight, width: selectedWidth};\n    }\n\n    mid = Math.floor((left + right) / 2);\n\n    const temporaryConstraints = {\n        video: {\n            mandatory: {\n                minWidth: ResolutionsToCheck[mid].width,\n                minHeight: ResolutionsToCheck[mid].height,\n                maxWidth: ResolutionsToCheck[mid].width,\n                maxHeight: ResolutionsToCheck[mid].height\n            }\n        }\n    };\n\n    return navigator.mediaDevices.getUserMedia(temporaryConstraints)\n        .then(stream => {\n            console.log(\"Success for --> \", mid, \" \", ResolutionsToCheck[mid]);\n            selectedWidth = ResolutionsToCheck[mid].width;\n            selectedHeight = ResolutionsToCheck[mid].height;\n            left = mid + 1;\n            for (let track of stream.getTracks()) {\n                track.stop()\n            }\n            return findMaxResolution();\n        }).catch(error => {\n            console.log(\"Failed for --> \" + mid, \" \", ResolutionsToCheck[mid], \" \", error);\n            right = mid - 1;\n            return findMaxResolution();\n        });\n}","class ImageCropper {\n\n    constructor() {\n        this.set = new Set();\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        this.img = new Image();\n        this.crop = this.crop.bind(this);\n    }\n\n    cropImage(imageSrc, frameToCrop, rectWidth, rectHeight, passImageFunc) {\n        this.set.add(passImageFunc);\n        this.subImage = frameToCrop;\n        this.rectWidth = rectWidth;\n        this.rectHeight = rectHeight;\n        this.img.onload = this.crop;\n        this.img.src = imageSrc;\n    }\n\n    crop() {\n        this.canvas.width = this.rectWidth;\n        this.canvas.height = this.rectHeight;\n        this.ctx.drawImage(this.img,\n            this.subImage.x,\n            this.subImage.y,\n            this.subImage.width,\n            this.subImage.height,\n            0,\n            0,\n            this.rectWidth,\n            this.rectHeight);\n        for (let f of this.set)\n            f(this.canvas.toDataURL());\n    }\n\n\n}\n\nexport default new ImageCropper();","import React from 'react';\nimport CapturePhoto from \"./elems/CapturePhoto\";\nimport axios from 'axios';\nimport './static/css/app.css';\nimport CheckPhoto from \"./elems/CheckPhoto\";\nimport Checkbox from \"./elems/Checkbox\";\nimport FaceDetector from \"./utils/FaceDetector\";\nimport {findMaxResolution} from \"./utils/utils\";\nimport ImageCuter from \"./utils/ImageCuter\";\nimport ImageMirrorer from \"./utils/ImageMirrorer\";\nimport ReactGA from 'react-ga';\n\nfunction initializeReactGA() {\n    ReactGA.initialize('UA-138960980-1');\n    ReactGA.pageview(window.location.pathname + window.location.search);\n}\n\nconst viewportWidth = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\nconst viewportHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n\nexport default class App extends React.Component {\n\n    setRef = webcam => this.webcam = webcam;\n\n    webcam = null;\n    state = {\n        imageSrc: null,\n        mirror: true,\n        handling: true,\n        faceBox: {\n            x: 0,\n            y: 0,\n            width: viewportHeight * 0.45,\n            height: viewportHeight * 0.4,\n        },\n        //bounds of frame that we capture (according to face position and size)\n        capturedFrame: {\n            x: 0,\n            y: 0,\n            width: viewportHeight * 0.45,\n            height: viewportHeight * 0.8\n        },\n        videoConstraints: {\n            width: 640,\n            height: 480,\n            frameRate: 60,\n            facingMode: \"user\",\n        },\n        viewport: {\n            width: viewportWidth,\n            height: viewportHeight,\n        },\n    };\n\n    componentDidMount = () => {\n        window.addEventListener('resize', this.handleResize);\n        findMaxResolution().then(this.setVideoConstraintsResolution);\n        FaceDetector.loadModels()\n            .then(this.handlingCurrentFrame);\n    };\n\n    handleResize = () => {\n        this.setState({\n            viewport: {\n                width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n                height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0),\n            },\n        });\n    };\n\n    handlingCurrentFrame = () => {\n        //console.log(\"enter handling\");\n        if (this.state.handling && !!this.webcam) {\n            FaceDetector.faceDetection(\n                this.state.mirror,\n                this.webcam,\n                this.setFaceBoxAndCalculateCapturedFrame,\n                this.handlingCurrentFrame\n            );\n            //   console.log(\"oo, handling!\");\n        }\n    };\n\n    onCapture = () => {\n        ReactGA.event({\n            category: 'User',\n            action: 'Capture'\n        });\n        if (this.state.mirror)\n            ImageMirrorer.captureAndMirrorImage(this.webcam, this.cropCapturedImage);\n        else this.cropCapturedImage(this.webcam.getScreenshot());\n    };\n\n    cropCapturedImage = (src) => {\n        const rectWidth = this.state.viewport.height * 0.45;\n        const rectHeight = this.state.viewport.height * 0.8;\n\n        ImageCuter.cropImage(\n            src,\n            this.state.capturedFrame,\n            rectWidth,\n            rectHeight,\n            this.setImage\n        );\n        this.setState({handling: false});\n    };\n\n    onConfirm = () => {\n        axios.post(\"/addImage\", this.state.imageSrc);\n        console.log(this.state.imageSrc);\n    };\n\n    onBack = () => {\n        this.setState({handling: true});\n        this.setImage(null);\n        setTimeout(this.handlingCurrentFrame, 3000);\n    };\n\n    onMirrorChange = (e) => {\n        this.setState({\n            mirror: e.target.checked\n        });\n    };\n\n    setFaceBoxAndCalculateCapturedFrame = (faceBox) => {\n\n        let frameHeight, frameWidth;\n\n        const estimatedFrameWidth = Math.min(this.state.videoConstraints.width, faceBox.width);\n        const estimatedFrameHeight = estimatedFrameWidth * 16 / 9;\n\n        //check for album-oriented(horizontal) web cameras, to keep image in shape of vertical rectangle\n        if (estimatedFrameHeight > this.state.videoConstraints.height) {\n            frameHeight = this.state.videoConstraints.height;\n            frameWidth = frameHeight / 16 * 9;\n        } else {\n            frameWidth = estimatedFrameWidth;\n            frameHeight = estimatedFrameHeight;\n        }\n\n        const frameX = Math.min(Math.max(0, faceBox.x), this.state.videoConstraints.width - faceBox.width);\n        const frameY = Math.min(Math.max(0, faceBox.y - frameHeight / 6), this.state.videoConstraints.height - frameHeight);\n\n\n        if (this.isFarFromCurrent(faceBox))\n            this.setState({\n                faceBox: faceBox,\n                capturedFrame: {\n                    x: frameX,\n                    y: frameY,\n                    width: frameWidth,\n                    height: frameHeight,\n                }\n            });\n    };\n\n    setVideoConstraintsResolution = (resolution) => {\n        this.setState({\n            videoConstraints: {\n                ...this.state.videoConstraints,\n                ...resolution\n            }\n        });\n    };\n\n    isFarFromCurrent = (faceBox) => {\n        const threshold = 20;\n        return Math.abs(faceBox.x - this.state.faceBox.x) > threshold ||\n            Math.abs(faceBox.y - this.state.faceBox.y) > threshold;\n    };\n\n    setImage = (src) => {\n        this.setState({\n            imageSrc: src\n        });\n    };\n\n    handlePhotoChoose = (e) => {\n        e.preventDefault();\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadend = () => this.setImage(reader.result);\n        reader.readAsDataURL(file)\n    };\n\n    render() {\n\n        const checkPhoto = (<CheckPhoto videoConstraints={this.state.videoConstraints}\n                                        imageSrc={this.state.imageSrc}\n                                        onConfirm={this.onConfirm}\n                                        onBack={this.onBack}/>);\n\n        const capturePhoto = (<CapturePhoto webcam={this.webcam}\n                                            setRef={this.setRef}\n                                            {...this.state}\n                                            onUserMedia={this.handlingCurrentFrame()}\n                                            onCapture={this.onCapture}\n                                            onNext={this.handlingCurrentFrame}\n                                            handlePhotoChoose={this.handlePhotoChoose}\n                                            setLeftInfo={this.setLeftInfo}\n                                            setTopInfo={this.setTopInfo}/>);\n\n\n        return (<div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n            <div>\n                {this.state.imageSrc ? checkPhoto : capturePhoto}\n                <h4 style={{width: viewportHeight * 0.45}}>If you don't see video stream, check if smth else using your\n                    webcamera.\n                    Also i'm working on browser compatibility)</h4>\n            </div>\n            <Checkbox value={this.state.mirror}\n                      onChange={this.onMirrorChange}\n                      label=\"mirror\"/>\n        </div>);\n    }\n\n}","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}